#!/usr/bin/env bash

#-------------------------------------------------------------------------------
# ai-b-ic
#
# DANS CHROOT
#
# Ne fonctionne qu'avec la langue FR (fr_FR)
#
# Interface graphique avec dialog

source $(pwd)/ai-commons

    # LECTURE DES VARIABLES {{{
    read_variables_ali_b1() {
        #/root/variables.ali
        if [[ -f "/root/variables.ali" ]]; then
            eval $(grep '^TYPE_KEYBOARD=' "/root/variables.ali")
            TYPE_KEYBOARD="${TYPE_KEYBOARD}"
            eval $(grep '^NAME_NET_WIRED=' "/root/variables.ali")
            NAME_NET_WIRED="${NAME_NET_WIRED}"
            eval $(grep '^IS_UEFI=' "/root/variables.ali")
            IS_UEFI="${IS_UEFI}"
            eval $(grep '^IN_VIRTUAL_BOX=' "/root/variables.ali")
            IN_VIRTUAL_BOX="${IN_VIRTUAL_BOX}"
            eval $(grep '^IS_HDD_OR_SSD=' "/root/variables.ali")
            IS_HDD_OR_SSD="${IS_HDD_OR_SSD}"
            eval $(grep '^TYPE_STORAGE_PARTITION=' "/root/variables.ali")
            TYPE_STORAGE_PARTITION="${TYPE_STORAGE_PARTITION}"
            eval $(grep '^ROOT_DEVICE=' "/root/variables.ali")
            ROOT_DEVICE="${ROOT_DEVICE}"
            eval $(grep '^ROOT=' "/root/variables.ali")
            ROOT="${ROOT}"
            eval $(grep '^ROOT_FS_TYPE=' "/root/variables.ali")
            ROOT_FS_TYPE="${ROOT_FS_TYPE}"
            eval $(grep '^IS_VAR_SEPARATE=' "/root/variables.ali")
            IS_VAR_SEPARATE="${IS_VAR_SEPARATE}"
            eval $(grep '^EFI_DEVICE=' "/root/variables.ali")
            EFI_DEVICE="${EFI_DEVICE}"
        else
            local messages=""
            local titre="LECTURE FICHIER <<variables.ali>>"
            messages="\n"
            messages+="${BRred_dlg}/!\ ERREUR${Reset_dlg}\n"
            messages+="    Le fichier ${Byellow_dlg}variables.ali${Reset_dlg} n'existe pas.\n"
            messages+="    ARRET immediat.\n"
            print_dialog_msgbox "${titre}" "${messages}" "OK"
            exit 1
        fi
    }
    #}}}
    #CONFIGURE FSTAB {{{
    configure_fstab() {
        local retour=9
        local messages=""
        local messages_if=""
        local titre="CONFIGURATION DU FICHIER <</etc/fstab>>"
        #
        if [[ ${TYPE_STORAGE_PARTITION} == "GPT" ]]; then
            local num_ligne_swap=$(grep -n "swap" "/etc/fstab" | cut -f1 -d:)
            if [[ "${num_ligne_swap}" != "" ]]; then
                messages_if+="Type de partition GPT : Ligne swap commentee.\n\n"
                sed -i "${num_ligne_swap}s/^UUID/#UUID/" /etc/fstab
            else
                messages_if+="Aucune partition de swap.\n\n"
            fi
        fi
        #
        if [[ ${IS_UEFI} = 1 ]]; then
            if [[ ${IS_HDD_OR_SSD} == "SSD" ]]; then
                local num_ligne_vfat=$(grep -n "vfat" "/etc/fstab" | cut -f1 -d:)
                if [[ "${num_ligne_vfat}" != "" ]]; then
                    messages_if+="UEFI et SSD : Options pour vfat : rw,relatime,discard.\n"
                    sed -i "${num_ligne_vfat}s/rw,relatime/rw,relatime,discard/" /etc/fstab
                fi
            fi
        fi
        #
        if [[ ${IS_HDD_OR_SSD} == "SSD" ]]; then
            # rotational = 0 ==> SSD
            # https://wiki.archlinux.org/index.php/Solid_State_Drives#TRIM
            messages="\n"
            messages+="Activation du Trim (option discard ou service fstrim).\n"
            messages+="------------------------------------------------------\n\n"
            messages+="Configurer le TRIM en se basant sur :\n"
            REPLY=$(dialog --nocancel --backtitle "${TITRE_BOX_W}" --title "${titre}" --ok-label "Selectionner" --menu "${messages}" 20 72 5 \
                    "DISCARD" "TRIM par option de montage." \
                    "FSTRIM" "TRIM par service fstrim." \
                    3>&1 1>&2 2>&3)
            case "$REPLY" in
                "DISCARD")
                    messages_if+="SSD + TRIM : Options pour ext4 : defaults,relatime,discard.\n"
                    sed -i "s/rw,relatime,data=ordered/defaults,relatime,discard/g" /etc/fstab
                    ;;
                "FSTRIM")
                    messages_if+="SSD : Options pour ext4 : defaults,relatime.\n"
                    messages_if+="SSD + TRIM : Activation de fstrim.timer.\n"
                    sed -i "s/rw,relatime,data=ordered/defaults,relatime/g" /etc/fstab
                    printf '%s\n' "${BGreen}Activation de ${BYellow}fstrim.timer${BGreen}...${Reset}"
                    systemctl enable fstrim.timer
                    pause_function
                    ;;
            esac
        else
            # rotational = 1 ==> HDD
            messages_if+="HDD : Options pour ext4 : defaults,relatime.\n"
            sed -i "s/rw,relatime,data=ordered/defaults,relatime/g" /etc/fstab
        fi
        #
        messages="\n"
        messages+="${messages_if}"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        #
        messages="\n"
        messages+="Visualiser/Editer le fichier ${Byellow_dlg}/etc/fstab${Reset_dlg} avec ${BRwhite_dlg}${EDITOR}${Reset_dlg} ?\n"
        print_dialog_yesno "${titre}" "${messages}" "Editer" "Continuer"
        retour=$?
        if [[ $retour = 0 ]]; then
            ${EDITOR} /etc/fstab
        fi
    }
    #}}}
    #CONFIGURE VCONSOLE.CONF {{{
    configure_vconsole_conf() {
        local retour=9
        local messages=""
        local titre="CONFIGURATION DU FICHIER <</etc/vconsole.conf>>"
        echo "KEYMAP=$KEYMAP" > /etc/vconsole.conf
#        echo "FONT=Lat2-Terminus16" >> /etc/vconsole.conf
        echo "FONT=lat9w-16" >> /etc/vconsole.conf
#        echo "FONT_MAP=8859-15_to_uni" >> /etc/vconsole.conf
        messages="\n"
        messages+="Definition du type de clavier dans les consoles virtuelles.\n\n"
        messages+="Clavier : variable KEYMAP = ${Bwhite_dlg}$KEYMAP${Reset_dlg}\n"
        messages+="Police  : variable FONT   = ${Bwhite_dlg}lat9w-16${Reset_dlg}\n"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        #
        messages="\n"
        messages+="Visualiser/Editer le fichier ${Byellow_dlg}/etc/vconsole.conf${Reset_dlg} avec ${BRwhite_dlg}${EDITOR}${Reset_dlg} ?\n"
        print_dialog_yesno "${titre}" "${messages}" "Editer" "Continuer"
        retour=$?
        if [[ $retour = 0 ]]; then
            ${EDITOR} /etc/vconsole.conf
        fi           
    }
    #}}}
    #CONFIGURE PACMAN.CONF {{{
    configure_pacman_conf() {
        #ADD COLOR TO PACMAN.CONF
        local messages=""
        local titre="CONFIGURATION DU FICHIER <</etc/pacman.conf>>"
        messages="\n"
        messages+="Activation de l'option ${Bwhite_dlg}color${Reset_dlg}.\n"
        messages+="Activation de l'option ${Bwhite_dlg}VerbosePkgLists${Reset_dlg}.\n"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        sed -i "/^#Color/c\Color" /etc/pacman.conf
        sed -i "/^#VerbosePkgLists/c\VerbosePkgLists" /etc/pacman.conf
    }
    #}}}
    #CONFIGURE HOSTNAME {{{
    configure_hostname() {
        local retour=9
        local messages=""
        local titre="CONFIGURATION DU FICHIER <</etc/hostname>>"
        messages="\n"
        messages+="Entrer un nom d'hote pour identifier la machine :\n"
        messages+="${BRcyan_dlg}!!!${Reset_dlg} Sans espace.\n"
        until [[ $retour = 0 ]];
            do
                L_HN=$(dialog --colors --nocancel --backtitle "${TITRE_BOX_W}" --title "${titre}" --ok-label "Valider" --inputbox "${messages}" 16 72 "myarch" 3>&1 1>&2 2>&3)
                if [[ ${L_HN} =~ " " || ${L_HN} == "" ]]; then
                    retour=9
                else
                    retour=0
                fi
            done
        echo "$L_HN" > /etc/hostname
        retour=9
        messages="\n"
        messages+="Visualiser/Editer le fichier ${Byellow_dlg}/etc/hostname${Reset_dlg} avec ${BRwhite_dlg}${EDITOR}${Reset_dlg} ?\n"
        print_dialog_yesno "${titre}" "${messages}" "Editer" "Continuer"
        retour=$?
        if [[ $retour = 0 ]]; then
            ${EDITOR} /etc/hostname
        fi
        #
        # Lire valeur hostname ds L_HN
        L_HN=$(awk '{print $1}' /etc/hostname)
        # Ecrire la valeur hostname dans /etc/hosts
        sed -i "/127.0.0.1/s/$/ ${L_HN}/" /etc/hosts
        sed -i "/::1/s/$/ ${L_HN}/" /etc/hosts
        retour=9
        titre="MODIFICATION DU FICHIER <</etc/hosts>>"
        messages="\n"
        messages+="Nom d'hote choisi : ${BRwhite_dlg}${L_HN}${Reset_dlg}\n\n"
        messages+="Visualiser le fichier ${Byellow_dlg}/etc/hosts${Reset_dlg} ?\n"
        print_dialog_yesno "${titre}" "${messages}" "Visualiser" "Continuer"
        retour=$?
        if [[ $retour = 0 ]]; then
            printf '%s\n' "${BGreen}Visualisation de ${BYellow}/etc/hosts${BGreen}...${Reset}"
            cat /etc/hosts
            pause_function
        fi
    }
    #}}}
    #CONFIGURE TIMEZONE {{{
    configure_timezone() {
        local messages=""
        local titre="CONFIGURATION DU FICHIER <</etc/localtime>>"
        messages="\n"
        messages+="Le fuseau horaire selectionne est : ${BRwhite_dlg}${FR_ZONE}/${FR_SUBZONE}${Reset_dlg}.\n\n"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        ZONE=${FR_ZONE}
        SUBZONE=${FR_SUBZONE}
        printf '%s\n' "${BGreen}Creation lien symbolique ${BYellow}${ZONE}/${SUBZONE}${BGreen}...${Reset}"
        ln -sf /usr/share/zoneinfo/${ZONE}/${SUBZONE} /etc/localtime
        pause_function
    }
    #}}}
    #CONFIGURE HARDWARECLOCK {{{
    configure_hardwareclock() {
        local messages=""
        local titre="CONFIGURATION DE L'HORLOGE MATERIELLE"
        messages="\n"
        messages+="Le mode horloge materielle selectionne est : ${BRwhite_dlg}UTC${Reset_dlg}.\n\n"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        printf '%s\n' "${BGreen}Configuration de l'horloge materielle en ${BYellow}UTC${BGreen}...${Reset}"
        hwclock --systohc --utc
        pause_function
    }
    #}}}
    #CONFIGURE LOCALE {{{
    configure_locale() {
        local retour=9
        local messages=""
        local titre="CONFIGURATION DU FICHIER <</etc/locale.conf>>"
        messages="\n"
        messages+="Definition de la langue utilisee dans le systeme.\n\n"
        messages+="La langue locale selectionnee est : ${BRwhite_dlg}${FR_LOCALE}${Reset_dlg}.\n"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        LOCALE=${FR_LOCALE}
        LOCALE_8859="$LOCALE ISO-8859"
        LOCALE_UTF8="$LOCALE.UTF-8"
        echo "LANG=${LOCALE_UTF8}" > /etc/locale.conf
        echo "LC_COLLATE=C" >> /etc/locale.conf
        messages="\n"
        messages+="Visualiser/Editer le fichier ${Byellow_dlg}/etc/locale.conf${Reset_dlg} avec ${BRwhite_dlg}${EDITOR}${Reset_dlg} ?\n"
        print_dialog_yesno "${titre}" "${messages}" "Editer" "Continuer"
        retour=$?
        if [[ $retour = 0 ]]; then
            ${EDITOR} /etc/locale.conf
        fi
        #
        printf '%s\n' "${BGreen}Generation de la langue locale utilisee ${BYellow}${LOCALE}${BGreen}...${Reset}"
        sed -i "/${LOCALE}/s/^#//" /etc/locale.gen
        locale-gen
        pause_function
    }
    #}}}
    #CONFIGURE MKINITCPIO {{{
    configure_mkinitcpio() {
        local retour=9
        local messages=""
        local titre="CONFIGURATION DU FICHIER <</etc/mkinitcpio.conf>>"
        messages="\n"
        # Remplace udev par systemd. Rajoute keymap
        messages+="HOOKS : Remplacement de udev par systemd.\n"
        messages+="        Ajout de keymap.\n"
        # lecture ligne HOOKS=
        local contenu_hooks=$(sed -n "/^HOOKS=/p" /etc/mkinitcpio.conf)
        # Commente la ligne HOOKS= originale
        sed -i "/^HOOKS=/i\#${contenu_hooks}" /etc/mkinitcpio.conf
        # Inscrit modifs
        if [[ $IS_VAR_SEPARATE = 1 ]]; then
            messages+="HOOKS : Ajout de shutdown car partition /var separee.\n\n"
            sed -i "/^HOOKS=/s/base udev/base systemd/g;/^HOOKS=/s/keyboard fsck/keyboard keymap fsck shutdown/g" /etc/mkinitcpio.conf
        else
            messages+="\n"
            sed -i "/^HOOKS=/s/base udev/base systemd/g;/^HOOKS=/s/keyboard fsck/keyboard keymap fsck/g" /etc/mkinitcpio.conf
        fi
        # COMPRESSION="cat" (PAS DE COMPRESSION)
        messages+="COMPRESSION : Ajout de COMPRESSION=\"cat\" (PAS de Compression)\n"
        sed -i "/^#COMPRESSION=\"gzip\"/i\COMPRESSION=\"cat\"" /etc/mkinitcpio.conf
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        #
        messages="\n"
        messages+="Visualiser/Editer le fichier ${Byellow_dlg}/etc/mkinitcpio.conf${Reset_dlg} avec ${BRwhite_dlg}${EDITOR}${Reset_dlg} ?\n"
        print_dialog_yesno "${titre}" "${messages}" "Editer" "Continuer"
        retour=$?
        if [[ $retour = 0 ]]; then
            ${EDITOR} /etc/mkinitcpio.conf
        fi
        printf '%s\n' "${BGreen}Generation de ${BYellow}initramfs-linux.img${BGreen} et ${BYellow}initramfs-linux-fallback.img${BGreen}...${Reset}"
        mkinitcpio -p linux
        pause_function
    }
    #}}}
    # ai-b-bios-ic ou ai-b-uefi-ic
    #}}}
    #NETWORK {{{
    configure_network() {
        local messages=""
        local titre="CONFIGURATION DU RESEAU ETHERNET AVEC DHCPCD"
        messages="\n"
        messages+="Le nom de l'interface reseau est : ${BRwhite_dlg}${NAME_NET_WIRED}${Reset_dlg}\n\n"
        messages+="Ajout de l'option ${BRwhite_dlg}noarp${Reset_dlg} a ${Byellow_dlg}/etc/dhcpcd.conf${Reset_dlg}.\n"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        #
        echo "noarp" >> /etc/dhcpcd.conf
        printf '%s\n' "${BGreen}Creation du fichier ${BYellow}/etc/resolv.conf.head${BGreen}...${Reset}"
        cp -v ai-fconfig/net-ip-statique/resolv.conf.head /etc/resolv.conf.head
        # Enable toutes les interfaces reseaux par defaut
        printf '%s\n' "${BGreen}Activation du service ${BYellow}dhcpcd.service${BGreen}...${Reset}"
#       systemctl enable dhcpcd@${NAME_NET_WIRED}.service
        systemctl enable dhcpcd.service
        pause_function
    }
    #}}}
    #ROOT PASSWORD {{{
    set_root_password() {
        local retour=9
        local messages=""
        local messages_chk=""
        local titre="MOT DE PASSE ROOT"
        until [[ $retour = 0 ]];
        do
            messages="\n"
            messages+="Entrer le mot de passe ${Byellow_dlg}root${Reset_dlg} :\n"
            messages+="${BRcyan_dlg}!!!${Reset_dlg} 8 caracteres minimum et sans espace.\n"
            messages_chk="\n"
            messages_chk+="Confirmer le mot de passe ${Byellow_dlg}root${Reset_dlg} :\n"
            messages_chk+="${BRcyan_dlg}!!!${Reset_dlg} 8 caracteres minimum et sans espace.\n"
            L_MDP=$(dialog --colors --insecure --nocancel --backtitle "${TITRE_BOX_W}" --title "${titre}" --ok-label "Valider" --passwordbox "${messages}" 16 72 3>&1 1>&2 2>&3)
            L_MDP_CHK=$(dialog --colors --insecure --nocancel --backtitle "${TITRE_BOX_W}" --title "${titre}" --ok-label "Valider" --passwordbox "${messages_chk}" 16 72 3>&1 1>&2 2>&3)
            if [[ ${#L_MDP} -lt 8 || ${#L_MDP_CHK} -lt 8 || ${L_MDP} =~ " " || ${L_MDP_CHK} =~ " " || ${L_MDP} != ${L_MDP_CHK} ]]; then
                messages="\n"
                messages+="${BRred_dlg}/!\ ERREUR${Reset_dlg}\n"
                messages+="    Mot de passe ${Byellow_dlg}root${Reset_dlg} errone.\n"
                messages+="    Entrer de nouveau le mot de passe ${Byellow_dlg}root${Reset_dlg}."
                print_dialog_msgbox "${titre}" "${messages}" "Recommencer"
                retour=9
            else
                retour=0
            fi
        done
        #
        printf '%s\n' "${BGreen}Configure le mot de passe ${BYellow}root${BGreen} :${Reset}"
        echo -e "${L_MDP}\n${L_MDP}" > /tmp/.passwd
        passwd root < /tmp/.passwd
        rm -f /tmp/.passwd
#         # OU
#         echo -e "${L_MDP}\n${L_MDP}\n" | passwd root
        pause_function
    }
    #}}}

# ARCHLINUX INSTALL SCRIPTS - https://github.com/jeannoeldot/arch_install/ai-b-ic
    titre="INSTALLATION PARTIE 2 DANS CHROOT"
    read_variables_ali_b1
    # Sets the interval of inactivity
    setterm -blank 0
    # Sets keymap et font
    if [[ $TYPE_KEYBOARD == "AZERTY" ]]; then
        KEYMAP=fr-latin9
    else
        KEYMAP=fr-bepo-latin9
    fi
    messages="\n"
    messages+="Configure le clavier et la police :\n\n"
    messages+="Type de clavier  : ${Bwhite_dlg}${TYPE_KEYBOARD}${Reset_dlg}\n"
    messages+="Valeur de KEYMAP : ${Bwhite_dlg}${KEYMAP}${Reset_dlg}\n"
#     messages+="Police           : Lat2-Terminus16\n"
    messages+="Police           : ${Bwhite_dlg}lat9w-16${Reset_dlg}\n"
    print_dialog_msgbox "${titre}" "${messages}" "Continuer"
    loadkeys $KEYMAP
#    setfont Lat2-Terminus16
    setfont lat9w-16
    #
    messages="\n"
    messages+="Mise a jour de la base de pacman.\n"
    print_dialog_msgbox "${titre}" "${messages}" "Continuer"
    printf '%s\n' "${BGreen}Mise a jour de la base de pacman...${Reset}"
    pacman-db-upgrade
    pause_function
    #
    messages="\n"
    # Editeur par defaut
    messages+="${BRcyan_dlg}!!!${Reset_dlg} Infos :\n"
    messages+="-----------\n"
    messages+="L'editeur par defaut est : ${Bwhite_dlg}nano${Reset_dlg}\n"
    # UEFI ou BIOS
    if [[ $IS_UEFI = 1 ]]; then
        messages+="Installation en mode     : ${Bwhite_dlg}UEFI${Reset_dlg}\n"
        source $(pwd)/ai-b-uefi-ic
    else
        messages+="Installation en mode     : ${Bwhite_dlg}BIOS${Reset_dlg}\n"
        source $(pwd)/ai-b-bios-ic
    fi
    # Installation dans VirtualBox ou reelle
    if [[ $IN_VIRTUAL_BOX = 1 ]]; then
        messages+="Installation dans        : ${Bwhite_dlg}Oracle VM VirtualBox${Reset_dlg}\n"
    else
        messages+="Installation dans        : ${Bwhite_dlg}PC Reel${Reset_dlg}\n"
    fi
    print_dialog_msgbox "${titre}" "${messages}" "Continuer"
    #
    configure_fstab
    configure_vconsole_conf
    configure_pacman_conf
    configure_hostname
    configure_timezone
    configure_hardwareclock
    configure_locale
    configure_mkinitcpio
    # ai-b-bios-ic ou ai-b-uefi-ic
    install_bootloader
    configure_bootloader
    #
    configure_network
    set_root_password
    # INSCRIT CHOIX CLAVIER DANS variables_pour_ai_de.txt pour ai-de
    echo "type_choice_keyboard=${TYPE_KEYBOARD}" > /root/variables_pour_ai_de.txt
    #
    titre="FIN INSTALLATION PARTIE 2 DANS CHROOT"
    messages="\n"
    messages+="Commandes a executer dans l'ordre pour poursuivre l'installation :\n\n"
    messages+="${Bwhite_dlg}exit                             => Quitte l'environnement Chroot${Reset_dlg}\n"
    messages+="${Bwhite_dlg}cd ai && ./ai-b                  => Partie 3 de l'installation${Reset_dlg}\n"
    print_dialog_msgbox "${titre}" "${messages}" "Continuer"
    #
    exit 0
