#!/usr/bin/env bash

#-------------------------------------------------------------------------------
# ai-b-uefi-ic
# Appele par ai-b-ic
#
# Script d'installation en mode UEFI
# Ne fonctionne qu'avec la langue FR (fr_FR)
#
# Interface graphique avec dialog
#
#-------------------------------------------------------------------------------

    #INSTALL BOOTLOADER {{{
    install_bootloader() {
        local messages=""
        local titre="PROCESSUS DE BOOT : INSTALLATION DE GRUB"
        messages="\n"
        messages+="Installation de ${Byellow_dlg}efibootmgr${Reset_dlg}\n"
        messages+="pour gerer entree dans ${Byellow_dlg}NVRAM${Reset_dlg}.\n"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        printf '%s\n' "${BGreen}Installation de ${BYellow}efibootmgr${BGreen}...${Reset}"
        pacman -Syu efibootmgr
        #
        # https://wiki.archlinux.org/index.php/Beginners%27_Guide#For_UEFI_motherboards 12/10/2013
        # Si /sys/firmware/efi/efivars n'est pas deja monte.
        # Voir modifs  arch-install-scripts
        if [[ ! -d "/sys/firmware/efi/efivars" ]]; then
            mount -t efivarfs efivarfs /sys/firmware/efi/efivars
        fi
        # Supprime entree GRUB ArchLinux dans NVRAM si existe deja
        _num_entree=$(efibootmgr -v | awk '/GRUB/ {print $1}' | sed -e "s/^Boot//;s/\*$//")
        if [[ ${_num_entree} != "" ]]; then
            efibootmgr -B -b ${_num_entree}
        fi
        # Supprime entree rEFInd ArchLinux dans NVRAM si existe deja
        _num_entree=$(efibootmgr -v | awk '/rEFInd/ {print $1}' | sed -e "s/^Boot//;s/\*$//")
        if [[ ${_num_entree} != "" ]]; then
            efibootmgr -B -b ${_num_entree}
        fi
        #
        # Installation de GRUB
        messages="\n"
        messages+="Installation de ${Byellow_dlg}GRUB${Reset_dlg}\n"
        messages+="Installation de ${Byellow_dlg}fuse3 os-prober${Reset_dlg}\n"
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        printf '%s\n' "${BGreen}Installation de ${BYellow}GRUB fuse3 os-prober${BGreen}...${Reset}"
        pacman -Syu grub fuse3 os-prober
        #
        messages="\n"
        messages+="Installation de ${Byellow_dlg}GRUB${Reset_dlg}.\n"
        if (( $IN_VIRTUAL_BOX == 1 )); then
            messages+="Dans VIRTUAL BOX : Ajout option ${BRwhite_dlg}--removable${Reset_dlg}\n"
        fi
        print_dialog_msgbox "${titre}" "${messages}" "Continuer"
        if (( $IN_VIRTUAL_BOX == 1 )); then
            grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB_ARCH --removable
        else
            grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB_ARCH
        fi
        pause_function
    }
    #}}}
    #CONFIGURE BOOTLOADER {{{
    configure_bootloader() {
        local messages=""
        local titre="CONFIGURATION DE GRUB"
        messages="\n"
        messages+="GRUB_TIMEOUT=${BRwhite_dlg}3${Reset_dlg}\n"
        if (( $IN_VIRTUAL_BOX == 1 )); then
            messages+="GRUB_CMDLINE_LINUX=${BRwhite_dlg}\"rw force_addr=0xaddr systemd.unit=graphical.target quiet\"${Reset_dlg}\n"
        else
            messages+="GRUB_CMDLINE_LINUX=${BRwhite_dlg}\"rw systemd.unit=graphical.target quiet\"${Reset_dlg}\n"
        fi
        messages+="GRUB_CMDLINE_LINUX_DEFAULT=${BRwhite_dlg}\"\"${Reset_dlg}\n"

#        #GRUB_COLOR_NORMAL="light-blue/black"
#        #GRUB_COLOR_HIGHLIGHT="light-cyan/blue"

        messages+="GRUB_DEFAULT=${BRwhite_dlg}saved${Reset_dlg}\n"
        messages+="GRUB_SAVEDEFAULT=${BRwhite_dlg}true${Reset_dlg}\n"

        messages+="GRUB_DISABLE_SUBMENU=${BRwhite_dlg}y${Reset_dlg}\n"

        messages+="GRUB_DISABLE_OS_PROBER=${BRwhite_dlg}false${Reset_dlg}\n"

        messages+="Ajout de ${BRwhite_dlg}Shutdown menu entry${Reset_dlg}\n"
        messages+="Ajout de ${BRwhite_dlg}Restart menu entry${Reset_dlg}\n"

        print_dialog_msgbox_h "${titre}" "${messages}" "Continuer" 20
        # /etc/default/grub
        sed -i "/^GRUB_DEFAULT=/c\GRUB_DEFAULT=saved" /etc/default/grub
        sed -i "/^GRUB_TIMEOUT=/c\GRUB_TIMEOUT=3" /etc/default/grub
        if (( $IN_VIRTUAL_BOX == 1 )); then
            sed -i "/^GRUB_CMDLINE_LINUX=/c\GRUB_CMDLINE_LINUX=\"rw force_addr=0xaddr systemd.unit=graphical.target quiet\"" /etc/default/grub
        else
            sed -i "/^GRUB_CMDLINE_LINUX=/c\GRUB_CMDLINE_LINUX=\"rw systemd.unit=graphical.target quiet\"" /etc/default/grub
        fi
        sed -i "/^GRUB_CMDLINE_LINUX_DEFAULT=/c\GRUB_CMDLINE_LINUX_DEFAULT=\"\"" /etc/default/grub
        sed -i "/#GRUB_SAVEDEFAULT/s/^#//" /etc/default/grub
        sed -i "/#GRUB_DISABLE_SUBMENU/s/^#//" /etc/default/grub
        sed -i "/#GRUB_DISABLE_OS_PROBER/s/^#//" /etc/default/grub
        messages="\n"
        messages+="Visualiser/Editer le fichier ${Byellow_dlg}/etc/default/grub${Reset_dlg} avec ${BRwhite_dlg}${EDITOR}${Reset_dlg} ?\n"
        print_dialog_yesno "${titre}" "${messages}" "Editer" "Continuer"
        retour=$?
        if (( retour == 0 )); then
            ${EDITOR} /etc/default/grub
        fi
        #
        # "UEFI Firmware Settings" menu entry dans 30_uefi-firmware
        # /etc/grub.d/40_custom
        # "Shutdown" menu entry
        printf '%s\n' "menuentry 'System shutdown' {" >> /etc/grub.d/40_custom
        printf '%s\n' "   echo 'System shutting down...'" >> /etc/grub.d/40_custom
        printf '%s\n' '   halt' >> /etc/grub.d/40_custom
        printf '%s\n' '}' >> /etc/grub.d/40_custom
        # "Restart" menu entry
        printf '%s\n' "menuentry 'System restart' {" >> /etc/grub.d/40_custom
        printf '%s\n' "   echo 'System rebooting...'" >> /etc/grub.d/40_custom
        printf '%s\n' '   reboot' >> /etc/grub.d/40_custom
        printf '%s\n' '}' >> /etc/grub.d/40_custom
        #
        printf '%s\n' "${BGreen}Configuration de ${BYellow}/boot/grub/grub.cfg${BGreen}...${Reset}"
        grub-mkconfig -o /boot/grub/grub.cfg
        pause_function
        #
        messages="\n"
        messages+="Visualiser/Editer le fichier ${Byellow_dlg}/boot/grub/grub.cfg${Reset_dlg} avec ${BRwhite_dlg}${EDITOR}${Reset_dlg} ?\n"
        print_dialog_yesno "${titre}" "${messages}" "Editer" "Continuer"
        retour=$?
        if (( retour == 0 )); then
            ${EDITOR} /boot/grub/grub.cfg
        fi
        pause_function
    }
    #}}}

