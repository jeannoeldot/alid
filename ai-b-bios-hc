#!/usr/bin/env bash

#-------------------------------------------------------------------------------
# ai-b-bios-hc
# Appelé par ai-b
#
# Script d'installation en mode BIOS
# Ne fonctionne qu'avec la langue FR (fr_FR)
#
# Interface graphique avec whiptail
#
#-------------------------------------------------------------------------------

    #CREATE PARTITION {{{
    create_partition() {
        zero_the_drive() {
            #
            # Voir : https://wiki.archlinux.org/index.php/Beginners%27_guide#Erase_partition_table
            # sgdisk --zap-all /dev/sda
            local retour=9
            local messages=""
            local fonction="PARTITIONNEMENT : MISE À ZÉRO DU DISQUE «"${HDD_DEVICE}"».\n"
            fonction+="===================================================\n\n"
            messages="${fonction}"
            messages+="/!\ Si Multi Boot, NE PAS METTRE À ZÉRO le disque.\n"
            messages+="/!\ TOUTES les données sur le disque sélectionné seront perdues.\n\n"
            messages+="Confirmer la mise à zéro du disque «"${HDD_DEVICE}"»\n"
            print_whiptail_yesno_no "${messages}" "Mettre à zéro" "Annuler"
            retour=$?
            if [[ $retour = 0 ]]; then
                retour=9
                messages="${fonction}"
                messages+="Confirmer une 2ème fois la mise à zéro du disque «"${HDD_DEVICE}"»\n"
                print_whiptail_yesno_no "${messages}" "Mettre à zéro" "Annuler"
                retour=$?
                if [[ $retour = 0 ]]; then
                    sgdisk --zap-all ${HDD_DEVICE}
                    sync
                fi
            fi
        }
        appel_check_is_hdd_or_ssd() {
            local messages=""
            local fonction="PARTITIONNEMENT : TYPE DE DISQUE.\n"
            fonction+="=================================\n\n"
            messages="${fonction}"
            check_is_hdd_or_ssd "${HDD_DEVICE}"
            if [[ ${IS_HDD_OR_SSD} == "HDD" ]]; then
                messages+="!!! Le Disque «"${HDD_DEVICE}"» est un HDD.\n"
            else
                messages+="!!! Le Disque «"${HDD_DEVICE}"» est un SSD.\n"
            fi
            print_whiptail_msgbox "${messages}" "Continuer"
        }
        select_storage_partitions() {
            local messages=""
            local fonction="PARTITIONNEMENT : SÉLECTION DU TYPE DE TABLE DE PARTITIONS.\n"
            fonction+="===========================================================\n\n"
            messages="\n${fonction}"
            messages+="/!\ En mode BIOS (PAS UEFI), si dual boot avec Windows :\n"
            messages+="    NE PAS CHOISIR GPT.\n\n"
            messages+="Sélectionner le type de table de partitions (MSDOS ou GPT) :"
            TYPE_STORAGE_PARTITION=$(whiptail --nocancel --title "${TITRE_BOX_W}" --menu "${messages}" --ok-button "Valider" 20 72 5 \
                                    "MSDOS" "-" \
                                    "GPT" "-" \
                                    3>&1 1>&2 2>&3)
            
            messages="${fonction}"
            if [[ $TYPE_STORAGE_PARTITION == "MSDOS" ]]; then
                messages+="«cfdisk» sera lancé afin de créer les partitions sur «"${HDD_DEVICE}"»\n\n"
            else
                messages+="«cgdisk» sera lancé afin de créer les partitions sur «"${HDD_DEVICE}"»\n\n"
                messages+="/!\ Si GRUB est prévu, une partition de 2 Mio de type EF02\n"
                messages+="    doit être créée en 1er sur «"${HDD_DEVICE}"».\n"
            fi
            print_whiptail_msgbox "${messages}" "Continuer"
        }
        select_hdd_devices() {
            local messages=""
            local fonction="PARTITIONNEMENT : SÉLECTION DU DISQUE À PARTITIONNER.\n"
            fonction+="=====================================================\n\n"
            messages="\n${fonction}"
            local liste_disque_present=$(LC_ALL=C parted -sl 2> /dev/null | grep -E 'Mod|/dev/sd[a-z]' | sed -e "s/\(^Disk.*\)/\1\n/;s/Model/Modèle/;s/Disk/Disque/")
            messages+="Liste des Disques présents dans le PC :\n"
            messages+="---------------------------------------\n"
            messages+=${liste_disque_present}"\n\n"
            messages+="Sélectionner le Disque à partitionner :"
            local hauteur=0
            local nb_hdd=$(LC_ALL=C parted -sl 2> /dev/null | grep "/dev/sd[a-z]" | wc -l)
            case "$nb_hdd" in
                [1-2])  hauteur=25 ;;
                3)  hauteur=30 ;;
                4)  hauteur=35 ;;
                *)  hauteur=40 ;;
            esac
            local liste_hdd_devices=$(LC_ALL=C parted -sl 2> /dev/null | grep "/dev/sd[a-z]" | sed -e "s/://" | awk '{print $2   " "   $3$4}')
            HDD_DEVICE=$(whiptail --nocancel --title "${TITRE_BOX_W}" --menu "${messages}" --ok-button "Valider" $hauteur 72 5 ${liste_hdd_devices} 3>&1 1>&2 2>&3)
        }
        #
        select_hdd_devices
        #
        appel_check_is_hdd_or_ssd
        #
        zero_the_drive
        #
        select_storage_partitions
        #
        if [[ $TYPE_STORAGE_PARTITION == "MSDOS" ]]; then
            cfdisk $HDD_DEVICE
        else
            cgdisk $HDD_DEVICE
        fi
    }
    #}}}
    #FORMAT DEVICE {{{
    format_device() {
        local messages=""
        local fonction=""
        local retour=9
        select_filesystem() {
        # "ext4" "btrfs" "reiserfs" "ntfs" "vfat" "ext2" "ext3" "jfs" "xfs"
            TYPE="ext4"
        }
#         umount_partition() {
#             #check if swap is on and umount
#             swapon -s | grep $1 && swapoff $1
#             #check if partition is mounted and umount
#             mount | grep $1 && umount $1
#         }
        format_partition() {
#            clear
            printf '%s\n' "${BGreen}Formatage de la partition ${BYellow}$1${BGreen}...${Reset}"
#            umount_partition "$1"
            [[ -z $3 ]] && select_filesystem
            if [[ $1 == $ROOT ]]; then
                ROOT_FS_TYPE=$TYPE
            fi
            mkfs.$TYPE $1
            fsck $1
            tune2fs -c 30 $1
            mkdir -p $2
            mount -t $TYPE $1 $2
        }
        format_swap_partition() {
            fonction="PARTITIONNEMENT : FORMATAGE DE LA PARTITION «SWAP».\n"
            fonction+="===================================================\n\n"
            messages="${fonction}"
            messages+="!!! Si Multi Boot, NE PAS FORMATER la partition «SWAP».\n\n"
            messages+="Confirmer le formatage de la partition SWAP «"$1"»\n"
            print_whiptail_yesno_no "${messages}" "Formater" "Annuler"
            retour=$?
            if [[ $retour = 0 ]]; then
#                clear
                printf '%s\n' "${BGreen}Formatage de la partition SWAP ${BYellow}$1${BGreen}...${Reset}"
#                umount_partition "$1"
                mkswap $1
                swapon $1
            else
#                umount_partition "$1"
                swapon $1
            fi
        }
        calcul_num_line_bios_boot_part() {
            local disquelabel_type=$(LC_ALL=C fdisk -l $HDD_DEVICE | awk '/Disklabel/ {print $3}')
            if [[ $disquelabel_type == "gpt" ]]; then
                # SI EN GPT et GRUB : 1ère partition  = EF02 BIOS_BOOT_PARTITION ou BOOT_PAR_NUM
                local partition_type=$(LC_ALL=C fdisk -l $HDD_DEVICE | grep "${HDD_DEVICE}1" | awk '{print $6}')
                if [[ $partition_type == "BIOS" ]]; then
                    NUM_LINE_BIOS_BOOT_PART=1
                else
                    NUM_LINE_BIOS_BOOT_PART=255
                fi
            else
                # SI EN DOS
                NUM_LINE_BIOS_BOOT_PART=255
            fi
        }
        calcul_num_line_bios_boot_part
# SI EN GPT et GRUB : 1ère partition  = EF02 BIOS_BOOT_PARTITION ou BOOT_PAR_NUM
        if [[ $TYPE_STORAGE_PARTITION == "GPT" ]]; then
            if [[ ${NUM_LINE_BIOS_BOOT_PART} = 1 ]]; then
                fonction="PARTITIONNEMENT : SÉLECTION DES PARTITIONS.\n"
                fonction+="===========================================\n\n"
                messages="${fonction}"
                messages+="!!! En GPT : si GRUB est prévu, la 1ère partition est réservée :\n"
                messages+="    (BIOS_BOOT_PARTITION ou BOOT_PAR_NUM)\n"
                print_whiptail_msgbox "${messages}" "Continuer"
            fi
        fi
        partitions=$(LC_ALL=C fdisk -l $HDD_DEVICE | grep -v "Extended" | sed -e "s/*//" | awk '{print $1"  "$5}' | grep "/dev/" | sed "${NUM_LINE_BIOS_BOOT_PART}d")
# CHOIX PARTITION ROOT OBLIGATOIRE
        fonction="PARTITIONNEMENT : SÉLECTION PARTITION «ROOT».\n"
        fonction+="=============================================\n\n"
        messages="\n${fonction}"
        messages+="/!\ Toutes les données sur la partition choisie seront perdues.\n"
        ROOT=$(whiptail --nocancel --title "${TITRE_BOX_W}" --menu "${messages}" --ok-button "Choisir" 25 72 5 ${partitions} 3>&1 1>&2 2>&3)
        ROOT_DEVICE=$(echo $ROOT | sed 's/[0-9]//')
        format_partition "$ROOT" "${MOUNTPOINT}"
        CHOIX_PARTITIONS+=$(echo $ROOT)" = /root.  "
# CHOIX PARTITION SWAP FACULTATIF
        fonction="PARTITIONNEMENT : SÉLECTION PARTITION «SWAP».\n"
        fonction+="=============================================\n\n"
        messages="\n${fonction}"
        messages+="!!! LA PARTITION «SWAP» EST FACULTATIVE.\n\n"
        messages+=${CHOIX_PARTITIONS}"\n\n"
        partitions=$(LC_ALL=C fdisk -l $HDD_DEVICE | grep -v $ROOT | grep -v "Extended" | sed -e "s/*//" | awk '{print $1"  "$5}' | grep "/dev/" | sed "${NUM_LINE_BIOS_BOOT_PART}d")
        L_SWAP=$(whiptail --title "${TITRE_BOX_W}" --menu "${messages}" --ok-button "Choisir" --cancel-button "Annuler" 25 72 5 ${partitions} 3>&1 1>&2 2>&3)
        retour=$?
        if [[ $retour = 0 ]]; then
            format_swap_partition "$L_SWAP"
            CHOIX_PARTITIONS+=$(echo $L_SWAP)" = /swap.\n"
        else
            L_SWAP="/dev/sda98"
        fi
# CHOIX PARTITION HOME FACULTATIF
        fonction="PARTITIONNEMENT : SÉLECTION PARTITION «HOME».\n"
        fonction+="=============================================\n\n"
        messages="\n${fonction}"
        messages+="!!! LA PARTITION «HOME» EST FACULTATIVE.\n\n"
        messages+="/!\ Toutes les données sur la partition choisie seront perdues.\n\n"
        messages+=${CHOIX_PARTITIONS}"\n\n"
        partitions=$(LC_ALL=C fdisk -l $HDD_DEVICE | grep -v $ROOT | grep -v $L_SWAP | grep -v "Extended" | sed -e "s/*//" | awk '{print $1"  "$5}' | grep "/dev/" | sed "${NUM_LINE_BIOS_BOOT_PART}d")
        L_HOME=$(whiptail --title "${TITRE_BOX_W}" --menu "${messages}" --ok-button "Choisir" --cancel-button "Annuler" 25 72 5 ${partitions} 3>&1 1>&2 2>&3)
        retour=$?
        if [[ $retour = 0 ]]; then
            format_partition "$L_HOME" "${MOUNTPOINT}/home"
            CHOIX_PARTITIONS+=$(echo $L_HOME)" = /home."
        else
            L_HOME="/dev/sda99"
        fi
    }
    #}}}
